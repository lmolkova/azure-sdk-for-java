{{- include "stress-test-addons.deploy-job-template.from-pod" (list . "stress.java-servicebus") -}}
{{- define "stress.java-servicebus" -}}
metadata:
  labels:
    testInstance: "{{.Stress.Scenario}}-{{ .Release.Name }}-{{ .Release.Revision }}"
    testName: java-sb-stress
    chaos: "{{ default false .Stress.chaos }}"
spec:
  nodeSelector:
    sku: chaosperf
  containers:
    - name: sender
      image: {{ .Stress.imageTag }}
      imagePullPolicy: Always
      command: ['sh', '-c']
      args:
        - |
          set -a &&
          source $ENV_FILE &&
          export ANNOTATION={{ default .Stress.Scenario .Stress.annotation }}
          export TEST_CLASS="MessageSenderAsync"
          export DURATION_MINUTES={{ .Stress.testDurationMin }}
          export SEND_MESSAGE_RATE={{ .Stress.sendRate }}
          export BATCH_SIZE={{ .Stress.sendBatchSize }}
          export TRY_TIMEOUT_SECONDS={{ default 60 .Stress.tryTimeout }}
          export START_DELAY_MINUTES=0 &&
          export APPLICATIONINSIGHTS_ROLE_NAME=sender-{{ .Stress.BaseName }} &&
          export AZURE_LOG_LEVEL={{ default 2 .Stress.azureSdkLogLevel }} &&
          java -javaagent:applicationinsights-agent.jar \
          -Dreactor.schedulers.defaultBoundedElasticSize=20 \
          -jar /app/azure-messaging-servicebus-stress-1.0.0-beta.1.jar
      {{- include "stress-test-addons.container-env" . | nindent 6 }}
      resources:
        requests:
          memory: "1Gi"
          cpu: "1"
        limits:
          memory: "1Gi"
          cpu: "1"
    - name: binder
      image: {{ .Stress.imageTag }}
      imagePullPolicy: Always
      command: ['sh', '-c']
      args:
        - |
          set -a &&
          source $ENV_FILE &&
          export ANNOTATION={{ default .Stress.Scenario .Stress.annotation }}
          export TEST_CLASS="BinderConsumer"
          export DURATION_MINUTES={{ .Stress.testDurationMin }}
          export TRY_TIMEOUT_SECONDS={{ default 60 .Stress.tryTimeout }}
          export PROCESSOR_CONCURRENCY={{ .Stress.processingConcurrency }}
          export START_DELAY_MINUTES=0 &&
          export APPLICATIONINSIGHTS_ROLE_NAME=binder-{{ .Stress.BaseName }} &&
          export AZURE_LOG_LEVEL={{ default 2 .Stress.azureSdkLogLevel }} &&
          java -javaagent:applicationinsights-agent.jar \
          -Dreactor.schedulers.defaultBoundedElasticSize={{ .Stress.threadPoolSize }} \
          -Dbinder.enabled=true \
          -jar /app/azure-messaging-servicebus-stress-1.0.0-beta.1.jar
      {{- include "stress-test-addons.container-env" . | nindent 6 }}
      resources:
        requests:
          memory: "2Gi"
          cpu: "2"
        limits:
          memory: "2Gi"
          cpu: "2"
    - name: receiver
      image: {{ .Stress.imageTag }}
      imagePullPolicy: Always
      command: ['sh', '-c']
      args:
        - |
          set -a &&
          source $ENV_FILE &&
          export ANNOTATION={{ default .Stress.Scenario .Stress.annotation }}
          export TEST_CLASS="MessageReceiverAsync"
          export DURATION_MINUTES={{ .Stress.testDurationMin }}
          export START_DELAY_MINUTES={{ default 0 .Stress.delayStartMin }} &&
          export APPLICATIONINSIGHTS_ROLE_NAME=receiver-{{ .Stress.BaseName }} &&
          export AZURE_LOG_LEVEL={{ default 3 .Stress.azureSdkLogLevel }} &&
          java -javaagent:applicationinsights-agent.jar \
          -Dreactor.schedulers.defaultBoundedElasticSize=64 \
          -jar /app/azure-messaging-servicebus-stress-1.0.0-beta.1.jar
      {{- include "stress-test-addons.container-env" . | nindent 6 }}
      resources:
        requests:
          memory: "1024Mi"
          cpu: "1"
        limits:
          memory: "1024Mi"
          cpu: "1"
{{- end -}}
